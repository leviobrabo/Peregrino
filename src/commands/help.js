function helpCommand(bot, message) {
  if (message.chat.type !== "private") {
    return;
  }
  const firstName = message.from.first_name;
  const owner = process.env.ownerId

  const text =
    `<b>Ol√°! ${firstName}</b>\n\nEu sou um bot com o objetivo de propagar o evangelho pelo Telegram. Estou aqui para ajud√°-lo em sua jornada espiritual e proporcionar uma experi√™ncia enriquecedora com recursos e comandos relacionados √† Palavra de Deus. Fique √† vontade para explorar as op√ß√µes abaixo e descobrir tudo o que posso oferecer:\n\n<b>Fun√ß√µes dispon√≠veis:</b>\n\n- Plano de leitura b√≠blica em 365 dias (18h)\n- Planos diversos(21h30min)\n- Adicione seus motivos de ora√ß√£o e crie lembretes\n- Adicione anota√ß√µes b√≠blicas e reveja\n- Tenha um monitoramento de dias de estudo b√≠blico\n- Envio de vers√≠culos di√°rios e vers√≠culos com tema para grupos\n- Pesquisa da B√≠blia inline\n- Escolha a sua tradu√ß√£o preferida\n- Pedidos de intercess√µes`;
  const options = {
    parse_mode: "HTML",
    reply_markup: {
      inline_keyboard: [
        [
          {
            text: "üìå Lista de fun√ß√µes",
            callback_data: "commands",
          },
        ],
        [
          { text: "üöß Projetos", url: "https://t.me/pjtlbrabo" },
          {
            text: "üë§ Suporte", url: `https://t.me/kylorensbot`,
          },
        ],
        [
          {
            text: "üí∞ Fa√ßa uma contribui√ß√£o",
            callback_data: "donate",
          }
        ]
      ],
    },
  };

  bot.on("callback_query", async (callbackQuery) => {
    if (callbackQuery.message.chat.type !== "private") {
      return;
    }
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;
    const functions = {
      parse_mode: "HTML",
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "üôè Ora√ß√£o",
              callback_data: "oracao",
            },
            {
              text: "üìù Anota√ß√£o",
              callback_data: "anotacao",
            },
          ],
          [
            {
              text: "üñå Tradu√ß√µes",
              callback_data: "traducao",
            },
          ],
          [
            {
              text: "üìÜ Plano b√≠blico",
              callback_data: "biblico",
            },
            {
              text: "üìñ Planos",
              callback_data: "planos",
            },
          ],
          [
            {
              text: "‚è∞ Vers√≠culos",
              callback_data: "versiculos",
            },
          ],
          [
            {
              text: "‚ö°Ô∏è Atividade",
              callback_data: "atividade",
            },
            {
              text: "üîé B√≠blia inline",
              callback_data: "bibliainline",
            },
          ],
          [
            {
              text: "Voltar",
              callback_data: "back_to_help",
            },
          ],
        ],
      },
    }
    const funcao = `<b>As fun√ß√µes do bot</b>\n\nClique nos bot√µes abaixo para saber informa√ß√µes de cada funcionalidade do bot.\n\nPara ter acesso a lista de comandos, digite /comandos`

    if (callbackQuery.data === "commands") {
      await bot.editMessageText(funcao, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: functions.reply_markup,
      });
    } else if (callbackQuery.data === "donate") {
      const resposta_donate = `Ol√°, ${firstName}! \n\nContribua com qualquer valor para ajudar a manter o servidor do bot online e com mais recursos! Sua ajuda √© fundamental para mantermos o bot funcionando de forma eficiente e com novas funcionalidades. \n\nPara fazer uma doa√ß√£o, utilize a chave PIX a seguir: \nPix: <code>32dc79d2-2868-4ef0-a277-2c10725341d4</code>\nBanco: Picpay\nNome: Luzia\n\nObrigado pela sua contribui√ß√£o! üôå\n\n<b>BTC:</b> <code>bc1qjxzlug0cwnfjrhacy9kkpdzxfj0mcxc079axtl</code>\n<b>ETH/USDT:</b> <code>0x1fbde0d2a96869299049f4f6f78fbd789d167d1b</code>`;

      await bot.editMessageText(resposta_donate, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_help",
              },
            ],
          ],
        },
      })
    } else if (callbackQuery.data === "back_to_help") {
      await bot.editMessageText(text, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: options.reply_markup,
      });
    } else if (callbackQuery.data === "back_to_commands") {
      await bot.editMessageText(funcao, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: functions.reply_markup,
      });
    } else if (callbackQuery.data === "oracao") {
      const msgoracao = '<b>Para adicionar seus motivos de ora√ß√£o, siga estas etapas:</b>\n\n' +
        '1. <code>/oracao</code> - Visualiza seus motivos de ora√ß√£o.\n' +
        '2. <code>/addmotivo</code> &lt;motivo&gt; - Adiciona um novo motivo de ora√ß√£o.\n' +
        '3. <code>/delmotivo</code> &lt;n√∫mero&gt; - Remove um motivo de ora√ß√£o espec√≠fico.\n' +
        '4. <code>/horariooracao</code> &lt;hor√°rio&gt; - Define o hor√°rio de ora√ß√£o (formato 24h). <code>Ex: 21:30</code>\n' +
        '5. <code>/desativarhorario</code> - Desative o hor√°rio de ora√ß√£o\n' +
        '6. <code>/intercessao</code> - Envie um pedido de intercess√£o para o canal @pedidosdeoracaoperegrino\n\n' +
        'Certifique-se de ter no m√°ximo <b>5 motivos</b> de ora√ß√£o cadastrados. Para mais informa√ß√µes digite /ajudaoracao';
      await bot.editMessageText(msgoracao, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "anotacao") {
      const msganotacao = '<b>Para usar os comandos de anota√ß√£o, siga estas etapas:</b>\n\n<b>1.</b> Digite <code>/anotacao</code> para visualizar suas anota√ß√µes.\n<b>2.</b> Use <code>/addanotacao</code> &lt;texto que deseja anotar aqui&gt; para adicionar uma nova anota√ß√£o.\n<b>3.</b> Utilize <code>/delanotacao</code> &lt;n√∫mero&gt; para remover uma anota√ß√£o espec√≠fica.\n\n<b>Certifique-se de ter no m√°ximo 10 anota√ß√µes cadastradas e usar somente 200 caracteres. Para mais informa√ß√µes digite: /ajudaanotacao</b>';
      await bot.editMessageText(msganotacao, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "traducao") {
      const msgatraducao = '<b>O Pelegrino possibilita que voc√™ escolha dentre 14 tradu√ß√µes a sua preferida</b>\n\nPela gl√≥ria de Deus possu√≠mos irm√£os dedicados na propaga√ß√£o o Evangelho de Cristo, e com a ajuda do programadores <a href="https://github.com/damarals/biblias">Daniel Amaral</a> e <a href="https://github.com/thiagobodruk/biblia">Thiago Bodruk</a>\n\nPara saber mais digite: /infotradu!';
      await bot.editMessageText(msgatraducao, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "biblico") {
      const msgplanobiblico = '<b>Plano b√≠blico 365 dias</b>\n\nEsse plano b√≠blico segue a linha can√¥nica, ent√£o vai direto para a B√≠blia de G√™nesis a Apocalipse. Voc√™ receber√° leituras para cada dia da semana como um guia constante para terminar a B√≠blia inteira em um ano.\n\nEnvie /planobiblico para iniciar o plano!\nE se quiser mudar a tradu√ß√£o digita /traducao';
      await bot.editMessageText(msgplanobiblico, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "planos") {
      const msgplano = '<b>O Pelegrino possui in√∫meros planos b√≠blicos</b>\n\nEsses planos s√£o projetados para ajudar as pessoas a se envolverem regularmente com a Palavra de Deus, fornecendo uma estrutura para ler a B√≠blia de forma consistente ao longo de um per√≠odo de tempo.\n\nEnvie /plano para escolher um plano e /topplanos para ver o ranking';
      await bot.editMessageText(msgplano, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "versiculos") {
      const msgplano = '<b>O Pelegrino envia diariamente vers√≠culos b√≠blicos</b>\n\nO envio acontece √†s 8 horas, e √© enviado um vers√≠culo por dia\n\nEnvie /verson para ativar e /versoff para desativar o envio!\n\nO envio de vers√≠culo tamb√©m ocorrer para os grupos, basta colocar o bot como administrador no grupo e escolher um tema: /verstema e escolher entre Adora√ß√£o, Amor, Consolo, Encorajamento, F√©'; await bot.editMessageText(msgplano, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "atividade") {
      const msgatividade = '<b>O Pelegrino possui um sistema que contabiliza os dias de uso no bot</b>\n\nE possu√≠mos um sistema de rank que disponibiliza n√≠veis (de forma ludica) que √© alcan√ßado a cada perseveran√ßa \n\nEnvie /dia para saber maiis e /topdias para ver o ranking';
      await bot.editMessageText(msgatividade, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    } else if (callbackQuery.data === "bibliainline") {
      const msginline = '<b>O Pelegrino possui uma b√≠blia inline</b>\n\nVoc√™ pode t√° se perguntando o que seria isso... basicamente √© uma consulta por uma linha de comando, isto √©, voc√™ pode consultar a b√≠blia em qualquer lugar do telegram (Grupos, Canais e chat privado).\n\nBasta enviar <code>@operegrino_bot G√™nesis 1</code>\n<code>@operegrino_bot gn 1</code>\n<code>@operegrino_bot ap 1:2</code>\n<code>@operegrino_bot ex 1:5-8</code>.\n\nPara acessar a lista dos nome dos livros ou abrevia√ß√µes digite: /livros !';
      await bot.editMessageText(msginline, {
        parse_mode: "HTML",
        disable_web_page_preview: true,
        chat_id: chatId,
        message_id: messageId,
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: "B√≠blia",
                switch_inline_query_current_chat: '',
              },
            ],
            [
              {
                text: "Voltar",
                callback_data: "back_to_commands",
              },
            ],
          ],
        },
      });
    }
  });


  bot.sendMessage(message.chat.id, text, options);
}

module.exports = {
  helpCommand,
};
